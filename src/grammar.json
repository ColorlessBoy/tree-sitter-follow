{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "follow",
  "rules": {
    "start": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "command"
      }
    },
    "command": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "definition"
        },
        {
          "type": "SYMBOL",
          "name": "theorem"
        },
        {
          "type": "SYMBOL",
          "name": "proofstep"
        },
        {
          "type": "SYMBOL",
          "name": "action"
        },
        {
          "type": "SYMBOL",
          "name": "search"
        }
      ]
    },
    "definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "def_key"
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": ":"
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "def_key"
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": ":="
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "def_key"
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": ":"
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            },
            {
              "type": "STRING",
              "value": ":="
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            }
          ]
        }
      ]
    },
    "theorem": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "thm_key"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "proofstep": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ps_key"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "action": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "action"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "search": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "search"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "primary"
        },
        {
          "type": "SYMBOL",
          "name": "app"
        },
        {
          "type": "SYMBOL",
          "name": "lambda"
        },
        {
          "type": "SYMBOL",
          "name": "forall"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "primary": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "sort"
        },
        {
          "type": "SYMBOL",
          "name": "const"
        },
        {
          "type": "SYMBOL",
          "name": "bound_var"
        }
      ]
    },
    "app": {
      "type": "PREC_LEFT",
      "value": 3,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expr"
          },
          {
            "type": "SYMBOL",
            "name": "expr"
          }
        ]
      }
    },
    "lambda": {
      "type": "PREC_RIGHT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "lambda_arg"
          },
          {
            "type": "STRING",
            "value": "=>"
          },
          {
            "type": "SYMBOL",
            "name": "expr"
          }
        ]
      }
    },
    "lambda_arg": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "("
              },
              {
                "type": "SYMBOL",
                "name": "const"
              },
              {
                "type": "STRING",
                "value": ":"
              },
              {
                "type": "SYMBOL",
                "name": "expr"
              },
              {
                "type": "STRING",
                "value": ")"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "forall": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "forall_arg"
          },
          {
            "type": "STRING",
            "value": "->"
          },
          {
            "type": "SYMBOL",
            "name": "expr"
          }
        ]
      }
    },
    "forall_arg": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "("
              },
              {
                "type": "SYMBOL",
                "name": "const"
              },
              {
                "type": "STRING",
                "value": ":"
              },
              {
                "type": "SYMBOL",
                "name": "expr"
              },
              {
                "type": "STRING",
                "value": ")"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "sort": {
      "type": "PREC",
      "value": 100,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "Sort"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "level"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "const": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "bound_var": {
      "type": "PREC",
      "value": 100,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": "\\d+"
          }
        ]
      }
    },
    "level": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "level"
            },
            {
              "type": "STRING",
              "value": "+"
            },
            {
              "type": "STRING",
              "value": "1"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "\\d+"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "Max"
            },
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "level"
            },
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "SYMBOL",
              "name": "level"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "IMax"
            },
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "level"
            },
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "SYMBOL",
              "name": "level"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[\\w_\\.']+"
      }
    },
    "def_key": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 2,
        "content": {
          "type": "STRING",
          "value": "def"
        }
      }
    },
    "thm_key": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 2,
        "content": {
          "type": "STRING",
          "value": "thm"
        }
      }
    },
    "ps_key": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 2,
        "content": {
          "type": "STRING",
          "value": "ps"
        }
      }
    },
    "action_key": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 2,
        "content": {
          "type": "STRING",
          "value": "action"
        }
      }
    },
    "search_key": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 2,
        "content": {
          "type": "STRING",
          "value": "search"
        }
      }
    },
    "comment": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "--"
            },
            {
              "type": "PATTERN",
              "value": ".*"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "/-"
            },
            {
              "type": "PATTERN",
              "value": "[^-]*(-[^/][^-]*)*?-\\/"
            }
          ]
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
